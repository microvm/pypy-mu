"""
MuIR builder -- builds IR bundle via API calls

This defines an abstract builder that needs to be implemented concretely.
"""


class AbstractMuIRBuilder:
    pass


"""
Node type hierarchy:

MuIRNode
 +-- MuBundleNode
 +-- MuChildNode
     +-- MuFuncSigNode
     +-- MuInstNode
     +-- MuVarNode
     |   +-- MuLocalVarNode
     |   |   +-- MuInstResNode
     |   |   +-- MuNorParamNode
     |   |   +-- MuExcParamNode
     |   +-- MuGlobalVarNode
     |       +-- MuExpFuncNode
     |       +-- MuConstNode
     |       +-- MuFuncNode
     |       +-- MuGlobalNode
     +-- MuTypeNode
     +-- MuFuncVerNode
     +-- MuBBNode

"""

class MuIRNode(object):                 pass
class MuBundleNode(MuIRNode):           pass
class MuChildNode(MuIRNode):            pass
class MuTypeNode(MuChildNode):          pass
class MuFuncSigNode(MuChildNode):       pass
class MuVarNode(MuChildNode):           pass
class MuGlobalVarNode(MuVarNode):       pass
class MuConstNode(MuGlobalVarNode):     pass
class MuGlobalNode(MuGlobalVarNode):    pass
class MuFuncNode(MuGlobalVarNode):      pass
class MuExpFuncNode(MuGlobalVarNode):   pass
class MuLocalVarNode(MuVarNode):        pass
class MuNorParamNode(MuLocalVarNode):   pass
class MuExcParamNode(MuLocalVarNode):   pass
class MuInstResNode(MuLocalVarNode):    pass
class MuFuncVerNode(MuChildNode):       pass
class MuBBNode(MuChildNode):            pass
class MuInstNode(MuChildNode):          pass


class MuID(int):                        pass
class MuName(str):                      pass


# --------------------------------------------------------------------------------
# API
API = {
    'abort_bundle_node': {'arg_ts': ('MuCtx', 'MuBundleNode'),
                          'args': ('ctx', 'b'),
                          'rtn_t': 'void'},
    'add_dest': {'arg_ts': ('MuCtx',
                            'MuInstNode',
                            'MuDestKind',
                            'MuBBNode',
                            'MuVarNode',
                            'int'),
                 'args': ('ctx', 'inst', 'kind', 'dest', 'vars', 'nvars'),
                 'rtn_t': 'void'},
    'add_keepalives': {'arg_ts': ('MuCtx',
                                  'MuInstNode',
                                  'MuLocalVarNode',
                                  'int'),
                       'args': ('ctx', 'inst', 'vars', 'nvars'),
                       'rtn_t': 'void'},
    'add_switch_dest': {'arg_ts': ('MuCtx',
                                   'MuInstNode',
                                   'MuConstNode',
                                   'MuBBNode',
                                   'MuVarNode',
                                   'int'),
                        'args': ('ctx', 'sw', 'key', 'dest', 'vars', 'nvars'),
                        'rtn_t': 'void'},
    'get_id': {'arg_ts': ('MuCtx', 'MuChildNode'),
               'args': ('ctx', 'node'),
               'rtn_t': 'MuID'},
    'get_node': {'arg_ts': ('MuCtx', 'MuBundleNode', 'MuID'),
                 'args': ('ctx', 'b', 'id'),
                 'rtn_t': 'MuChildNode'},
    'load_bundle_from_node': {'arg_ts': ('MuCtx', 'MuBundleNode'),
                              'args': ('ctx', 'b'),
                              'rtn_t': 'void'},
    'new_alloca': {'arg_ts': ('MuCtx', 'MuBBNode', 'MuTypeNode'),
                   'args': ('ctx', 'bb', 'allocty'),
                   'rtn_t': 'MuInstNode'},
    'new_allocahybrid': {'arg_ts': ('MuCtx',
                                    'MuBBNode',
                                    'MuTypeNode',
                                    'MuTypeNode',
                                    'MuVarNode'),
                         'args': ('ctx', 'bb', 'allocty', 'lenty', 'length'),
                         'rtn_t': 'MuInstNode'},
    'new_atomicrmw': {'arg_ts': ('MuCtx',
                                 'MuBBNode',
                                 'int',
                                 'MuMemOrd',
                                 'MuAtomicRMWOp',
                                 'MuVarNode',
                                 'MuVarNode'),
                      'args': ('ctx',
                               'bb',
                               'is_ptr',
                               'ord',
                               'optr',
                               'loc',
                               'opnd'),
                      'rtn_t': 'MuInstNode'},
    'new_bb': {'arg_ts': ('MuCtx', 'MuFuncVerNode'),
               'args': ('ctx', 'fv'),
               'rtn_t': 'MuBBNode'},
    'new_binop': {'arg_ts': ('MuCtx',
                             'MuBBNode',
                             'MuBinOptr',
                             'MuTypeNode',
                             'MuVarNode',
                             'MuVarNode'),
                  'args': ('ctx', 'bb', 'optr', 'ty', 'opnd1', 'opnd2'),
                  'rtn_t': 'MuInstNode'},
    'new_branch': {'arg_ts': ('MuCtx', 'MuBBNode'),
                   'args': ('ctx', 'bb'),
                   'rtn_t': 'MuInstNode'},
    'new_branch2': {'arg_ts': ('MuCtx', 'MuBBNode', 'MuVarNode'),
                    'args': ('ctx', 'bb', 'cond'),
                    'rtn_t': 'MuInstNode'},
    'new_bundle': {'arg_ts': ('MuCtx',),
                   'args': ('ctx',),
                   'rtn_t': 'MuBundleNode'},
    'new_call': {'arg_ts': ('MuCtx',
                            'MuBBNode',
                            'MuFuncSigNode',
                            'MuVarNode',
                            'MuVarNode',
                            'int'),
                 'args': ('ctx', 'bb', 'sig', 'callee', 'args', 'nargs'),
                 'rtn_t': 'MuInstNode'},
    'new_ccall': {'arg_ts': ('MuCtx',
                             'MuBBNode',
                             'MuCallConv',
                             'MuTypeNode',
                             'MuFuncSigNode',
                             'MuVarNode',
                             'MuVarNode',
                             'int'),
                  'args': ('ctx',
                           'bb',
                           'callconv',
                           'callee_ty',
                           'sig',
                           'callee',
                           'args',
                           'nargs'),
                  'rtn_t': 'MuInstNode'},
    'new_cmp': {'arg_ts': ('MuCtx',
                           'MuBBNode',
                           'MuCmpOptr',
                           'MuTypeNode',
                           'MuVarNode',
                           'MuVarNode'),
                'args': ('ctx', 'bb', 'optr', 'ty', 'opnd1', 'opnd2'),
                'rtn_t': 'MuInstNode'},
    'new_cmpxchg': {'arg_ts': ('MuCtx',
                               'MuBBNode',
                               'int',
                               'int',
                               'MuMemOrd',
                               'MuMemOrd',
                               'MuTypeNode',
                               'MuVarNode',
                               'MuVarNode',
                               'MuVarNode'),
                    'args': ('ctx',
                             'bb',
                             'is_ptr',
                             'is_weak',
                             'ord_succ',
                             'ord_fail',
                             'refty',
                             'loc',
                             'expected',
                             'desired'),
                    'rtn_t': 'MuInstNode'},
    'new_comminst': {'arg_ts': ('MuCtx',
                                'MuBBNode',
                                'MuCommInst',
                                'MuFlag',
                                'int',
                                'MuTypeNode',
                                'int',
                                'MuFuncSigNode',
                                'int',
                                'MuVarNode',
                                'int'),
                     'args': ('ctx',
                              'bb',
                              'opcode',
                              'flags',
                              'nflags',
                              'tys',
                              'ntys',
                              'sigs',
                              'nsigs',
                              'args',
                              'nargs'),
                     'rtn_t': 'MuInstNode'},
    'new_const_double': {'arg_ts': ('MuCtx',
                                    'MuBundleNode',
                                    'MuTypeNode',
                                    'double'),
                         'args': ('ctx', 'b', 'ty', 'value'),
                         'rtn_t': 'MuConstNode'},
    'new_const_float': {'arg_ts': ('MuCtx',
                                   'MuBundleNode',
                                   'MuTypeNode',
                                   'float'),
                        'args': ('ctx', 'b', 'ty', 'value'),
                        'rtn_t': 'MuConstNode'},
    'new_const_int': {'arg_ts': ('MuCtx',
                                 'MuBundleNode',
                                 'MuTypeNode',
                                 'uint64_t'),
                      'args': ('ctx', 'b', 'ty', 'value'),
                      'rtn_t': 'MuConstNode'},
    'new_const_int_ex': {'arg_ts': ('MuCtx',
                                    'MuBundleNode',
                                    'MuTypeNode',
                                    'uint64_t',
                                    'int'),
                         'args': ('ctx', 'b', 'ty', 'values', 'nvalues'),
                         'rtn_t': 'MuConstNode'},
    'new_const_null': {'arg_ts': ('MuCtx', 'MuBundleNode'),
                       'args': ('ctx', 'b'),
                       'rtn_t': 'MuConstNode'},
    'new_const_seq': {'arg_ts': ('MuCtx', 'MuBundleNode', 'MuConstNode', 'int'),
                      'args': ('ctx', 'b', 'elems', 'nelems'),
                      'rtn_t': 'MuConstNode'},
    'new_conv': {'arg_ts': ('MuCtx',
                            'MuBBNode',
                            'MuConvOptr',
                            'MuTypeNode',
                            'MuTypeNode',
                            'MuVarNode'),
                 'args': ('ctx', 'bb', 'optr', 'from_ty', 'to_ty', 'opnd'),
                 'rtn_t': 'MuInstNode'},
    'new_exc_param': {'arg_ts': ('MuCtx', 'MuBBNode'),
                      'args': ('ctx', 'bb'),
                      'rtn_t': 'MuExcParamNode'},
    'new_exp_func': {'arg_ts': ('MuCtx',
                                'MuBundleNode',
                                'MuFuncNode',
                                'MuCallConv',
                                'MuConstNode'),
                     'args': ('ctx', 'b', 'func', 'callconv', 'cookie'),
                     'rtn_t': 'MuExpFuncNode'},
    'new_extractelement': {'arg_ts': ('MuCtx',
                                      'MuBBNode',
                                      'MuTypeNode',
                                      'MuTypeNode',
                                      'MuVarNode',
                                      'MuVarNode'),
                           'args': ('ctx',
                                    'bb',
                                    'seqty',
                                    'indty',
                                    'opnd',
                                    'index'),
                           'rtn_t': 'MuInstNode'},
    'new_extractvalue': {'arg_ts': ('MuCtx',
                                    'MuBBNode',
                                    'MuTypeNode',
                                    'int',
                                    'MuVarNode'),
                         'args': ('ctx', 'bb', 'strty', 'index', 'opnd'),
                         'rtn_t': 'MuInstNode'},
    'new_fence': {'arg_ts': ('MuCtx', 'MuBBNode', 'MuMemOrd'),
                  'args': ('ctx', 'bb', 'ord'),
                  'rtn_t': 'MuInstNode'},
    'new_func': {'arg_ts': ('MuCtx', 'MuBundleNode', 'MuFuncSigNode'),
                 'args': ('ctx', 'b', 'sig'),
                 'rtn_t': 'MuFuncNode'},
    'new_func_ver': {'arg_ts': ('MuCtx', 'MuBundleNode', 'MuFuncNode'),
                     'args': ('ctx', 'b', 'func'),
                     'rtn_t': 'MuFuncVerNode'},
    'new_funcsig': {'arg_ts': ('MuCtx',
                               'MuBundleNode',
                               'MuTypeNode',
                               'int',
                               'MuTypeNode',
                               'int'),
                    'args': ('ctx',
                             'b',
                             'paramtys',
                             'nparamtys',
                             'rettys',
                             'nrettys'),
                    'rtn_t': 'MuFuncSigNode'},
    'new_getelemiref': {'arg_ts': ('MuCtx',
                                   'MuBBNode',
                                   'int',
                                   'MuTypeNode',
                                   'MuTypeNode',
                                   'MuVarNode',
                                   'MuVarNode'),
                        'args': ('ctx',
                                 'bb',
                                 'is_ptr',
                                 'refty',
                                 'indty',
                                 'opnd',
                                 'index'),
                        'rtn_t': 'MuInstNode'},
    'new_getfieldiref': {'arg_ts': ('MuCtx',
                                    'MuBBNode',
                                    'int',
                                    'MuTypeNode',
                                    'int',
                                    'MuVarNode'),
                         'args': ('ctx',
                                  'bb',
                                  'is_ptr',
                                  'refty',
                                  'index',
                                  'opnd'),
                         'rtn_t': 'MuInstNode'},
    'new_getiref': {'arg_ts': ('MuCtx', 'MuBBNode', 'MuTypeNode', 'MuVarNode'),
                    'args': ('ctx', 'bb', 'refty', 'opnd'),
                    'rtn_t': 'MuInstNode'},
    'new_getvarpartiref': {'arg_ts': ('MuCtx',
                                      'MuBBNode',
                                      'int',
                                      'MuTypeNode',
                                      'MuVarNode'),
                           'args': ('ctx', 'bb', 'is_ptr', 'refty', 'opnd'),
                           'rtn_t': 'MuInstNode'},
    'new_global_cell': {'arg_ts': ('MuCtx', 'MuBundleNode', 'MuTypeNode'),
                        'args': ('ctx', 'b', 'ty'),
                        'rtn_t': 'MuGlobalNode'},
    'new_insertelement': {'arg_ts': ('MuCtx',
                                     'MuBBNode',
                                     'MuTypeNode',
                                     'MuTypeNode',
                                     'MuVarNode',
                                     'MuVarNode',
                                     'MuVarNode'),
                          'args': ('ctx',
                                   'bb',
                                   'seqty',
                                   'indty',
                                   'opnd',
                                   'index',
                                   'newval'),
                          'rtn_t': 'MuInstNode'},
    'new_insertvalue': {'arg_ts': ('MuCtx',
                                   'MuBBNode',
                                   'MuTypeNode',
                                   'int',
                                   'MuVarNode',
                                   'MuVarNode'),
                        'args': ('ctx',
                                 'bb',
                                 'strty',
                                 'index',
                                 'opnd',
                                 'newval'),
                        'rtn_t': 'MuInstNode'},
    'new_inst_res': {'arg_ts': ('MuCtx', 'MuInstNode'),
                     'args': ('ctx', 'inst'),
                     'rtn_t': 'MuInstResNode'},
    'new_load': {'arg_ts': ('MuCtx',
                            'MuBBNode',
                            'int',
                            'MuMemOrd',
                            'MuTypeNode',
                            'MuVarNode'),
                 'args': ('ctx', 'bb', 'is_ptr', 'ord', 'refty', 'loc'),
                 'rtn_t': 'MuInstNode'},
    'new_new': {'arg_ts': ('MuCtx', 'MuBBNode', 'MuTypeNode'),
                'args': ('ctx', 'bb', 'allocty'),
                'rtn_t': 'MuInstNode'},
    'new_newhybrid': {'arg_ts': ('MuCtx',
                                 'MuBBNode',
                                 'MuTypeNode',
                                 'MuTypeNode',
                                 'MuVarNode'),
                      'args': ('ctx', 'bb', 'allocty', 'lenty', 'length'),
                      'rtn_t': 'MuInstNode'},
    'new_newthread': {'arg_ts': ('MuCtx', 'MuBBNode', 'MuVarNode', 'MuVarNode'),
                      'args': ('ctx', 'bb', 'stack', 'threadlocal'),
                      'rtn_t': 'MuInstNode'},
    'new_nor_param': {'arg_ts': ('MuCtx', 'MuBBNode', 'MuTypeNode'),
                      'args': ('ctx', 'bb', 'ty'),
                      'rtn_t': 'MuNorParamNode'},
    'new_ret': {'arg_ts': ('MuCtx', 'MuBBNode', 'MuVarNode', 'int'),
                'args': ('ctx', 'bb', 'rvs', 'nrvs'),
                'rtn_t': 'MuInstNode'},
    'new_select': {'arg_ts': ('MuCtx',
                              'MuBBNode',
                              'MuTypeNode',
                              'MuTypeNode',
                              'MuVarNode',
                              'MuVarNode',
                              'MuVarNode'),
                   'args': ('ctx',
                            'bb',
                            'cond_ty',
                            'opnd_ty',
                            'cond',
                            'if_true',
                            'if_false'),
                   'rtn_t': 'MuInstNode'},
    'new_shiftiref': {'arg_ts': ('MuCtx',
                                 'MuBBNode',
                                 'int',
                                 'MuTypeNode',
                                 'MuTypeNode',
                                 'MuVarNode',
                                 'MuVarNode'),
                      'args': ('ctx',
                               'bb',
                               'is_ptr',
                               'refty',
                               'offty',
                               'opnd',
                               'offset'),
                      'rtn_t': 'MuInstNode'},
    'new_shufflevector': {'arg_ts': ('MuCtx',
                                     'MuBBNode',
                                     'MuTypeNode',
                                     'MuTypeNode',
                                     'MuVarNode',
                                     'MuVarNode',
                                     'MuVarNode'),
                          'args': ('ctx',
                                   'bb',
                                   'vecty',
                                   'maskty',
                                   'vec1',
                                   'vec2',
                                   'mask'),
                          'rtn_t': 'MuInstNode'},
    'new_store': {'arg_ts': ('MuCtx',
                             'MuBBNode',
                             'int',
                             'MuMemOrd',
                             'MuTypeNode',
                             'MuVarNode',
                             'MuVarNode'),
                  'args': ('ctx',
                           'bb',
                           'is_ptr',
                           'ord',
                           'refty',
                           'loc',
                           'newval'),
                  'rtn_t': 'MuInstNode'},
    'new_swapstack_kill': {'arg_ts': ('MuCtx', 'MuBBNode', 'MuVarNode'),
                           'args': ('ctx', 'bb', 'swappee'),
                           'rtn_t': 'MuInstNode'},
    'new_swapstack_ret': {'arg_ts': ('MuCtx',
                                     'MuBBNode',
                                     'MuVarNode',
                                     'MuTypeNode',
                                     'int'),
                          'args': ('ctx', 'bb', 'swappee', 'tys', 'ntys'),
                          'rtn_t': 'MuInstNode'},
    'new_switch': {'arg_ts': ('MuCtx', 'MuBBNode', 'MuVarNode'),
                   'args': ('ctx', 'bb', 'opnd'),
                   'rtn_t': 'MuInstNode'},
    'new_tailcall': {'arg_ts': ('MuCtx',
                                'MuBBNode',
                                'MuFuncSigNode',
                                'MuVarNode',
                                'MuVarNode',
                                'int'),
                     'args': ('ctx', 'bb', 'sig', 'callee', 'args', 'nargs'),
                     'rtn_t': 'MuInstNode'},
    'new_throw': {'arg_ts': ('MuCtx', 'MuBBNode', 'MuVarNode'),
                  'args': ('ctx', 'bb', 'exc'),
                  'rtn_t': 'MuInstNode'},
    'new_trap': {'arg_ts': ('MuCtx', 'MuBBNode', 'MuTypeNode', 'int'),
                 'args': ('ctx', 'bb', 'rettys', 'nrettys'),
                 'rtn_t': 'MuInstNode'},
    'new_type_array': {'arg_ts': ('MuCtx',
                                  'MuBundleNode',
                                  'MuTypeNode',
                                  'uint64_t'),
                       'args': ('ctx', 'b', 'elemty', 'len'),
                       'rtn_t': 'MuTypeNode'},
    'new_type_double': {'arg_ts': ('MuCtx', 'MuBundleNode'),
                        'args': ('ctx', 'b'),
                        'rtn_t': 'MuTypeNode'},
    'new_type_float': {'arg_ts': ('MuCtx', 'MuBundleNode'),
                       'args': ('ctx', 'b'),
                       'rtn_t': 'MuTypeNode'},
    'new_type_framecursorref': {'arg_ts': ('MuCtx', 'MuBundleNode'),
                                'args': ('ctx', 'b'),
                                'rtn_t': 'MuTypeNode'},
    'new_type_funcref': {'arg_ts': ('MuCtx', 'MuBundleNode'),
                         'args': ('ctx', 'b'),
                         'rtn_t': 'MuTypeNode'},
    'new_type_hybrid': {'arg_ts': ('MuCtx',
                                   'MuBundleNode',
                                   'MuTypeNode',
                                   'int',
                                   'MuTypeNode'),
                        'args': ('ctx', 'b', 'fixedtys', 'nfixedtys', 'varty'),
                        'rtn_t': 'MuTypeNode'},
    'new_type_int': {'arg_ts': ('MuCtx', 'MuBundleNode', 'int'),
                     'args': ('ctx', 'b', 'len'),
                     'rtn_t': 'MuTypeNode'},
    'new_type_iref': {'arg_ts': ('MuCtx', 'MuBundleNode'),
                      'args': ('ctx', 'b'),
                      'rtn_t': 'MuTypeNode'},
    'new_type_irnoderef': {'arg_ts': ('MuCtx', 'MuBundleNode'),
                           'args': ('ctx', 'b'),
                           'rtn_t': 'MuTypeNode'},
    'new_type_ref': {'arg_ts': ('MuCtx', 'MuBundleNode'),
                     'args': ('ctx', 'b'),
                     'rtn_t': 'MuTypeNode'},
    'new_type_stackref': {'arg_ts': ('MuCtx', 'MuBundleNode'),
                          'args': ('ctx', 'b'),
                          'rtn_t': 'MuTypeNode'},
    'new_type_struct': {'arg_ts': ('MuCtx', 'MuBundleNode', 'MuTypeNode', 'int'),
                        'args': ('ctx', 'b', 'fieldtys', 'nfieldtys'),
                        'rtn_t': 'MuTypeNode'},
    'new_type_tagref64': {'arg_ts': ('MuCtx', 'MuBundleNode'),
                          'args': ('ctx', 'b'),
                          'rtn_t': 'MuTypeNode'},
    'new_type_threadref': {'arg_ts': ('MuCtx', 'MuBundleNode'),
                           'args': ('ctx', 'b'),
                           'rtn_t': 'MuTypeNode'},
    'new_type_ufuncptr': {'arg_ts': ('MuCtx', 'MuBundleNode'),
                          'args': ('ctx', 'b'),
                          'rtn_t': 'MuTypeNode'},
    'new_type_uptr': {'arg_ts': ('MuCtx', 'MuBundleNode'),
                      'args': ('ctx', 'b'),
                      'rtn_t': 'MuTypeNode'},
    'new_type_vector': {'arg_ts': ('MuCtx',
                                   'MuBundleNode',
                                   'MuTypeNode',
                                   'uint64_t'),
                        'args': ('ctx', 'b', 'elemty', 'len'),
                        'rtn_t': 'MuTypeNode'},
    'new_type_void': {'arg_ts': ('MuCtx', 'MuBundleNode'),
                      'args': ('ctx', 'b'),
                      'rtn_t': 'MuTypeNode'},
    'new_type_weakref': {'arg_ts': ('MuCtx', 'MuBundleNode'),
                         'args': ('ctx', 'b'),
                         'rtn_t': 'MuTypeNode'},
    'new_watchpoint': {'arg_ts': ('MuCtx',
                                  'MuBBNode',
                                  'MuWPID',
                                  'MuTypeNode',
                                  'int'),
                       'args': ('ctx', 'bb', 'wpid', 'rettys', 'nrettys'),
                       'rtn_t': 'MuInstNode'},
    'new_wpbranch': {'arg_ts': ('MuCtx', 'MuBBNode', 'MuWPID'),
                     'args': ('ctx', 'bb', 'wpid'),
                     'rtn_t': 'MuInstNode'},
    'set_name': {'arg_ts': ('MuCtx', 'MuChildNode', 'MuName'),
                 'args': ('ctx', 'node', 'name'),
                 'rtn_t': 'void'},
    'set_newstack_pass_values': {'arg_ts': ('MuCtx',
                                            'MuInstNode',
                                            'MuTypeNode',
                                            'MuVarNode',
                                            'int'),
                                 'args': ('ctx', 'inst', 'tys', 'vars', 'nvars'),
                                 'rtn_t': 'void'},
    'set_newstack_throw_exc': {'arg_ts': ('MuCtx', 'MuInstNode', 'MuVarNode'),
                               'args': ('ctx', 'inst', 'exc'),
                               'rtn_t': 'void'},
    'set_type_funcref': {'arg_ts': ('MuCtx', 'MuTypeNode', 'MuFuncSigNode'),
                         'args': ('ctx', 'funcref', 'sig'),
                         'rtn_t': 'void'},
    'set_type_iref': {'arg_ts': ('MuCtx', 'MuTypeNode', 'MuTypeNode'),
                      'args': ('ctx', 'iref', 'ty'),
                      'rtn_t': 'void'},
    'set_type_ref': {'arg_ts': ('MuCtx', 'MuTypeNode', 'MuTypeNode'),
                     'args': ('ctx', 'ref', 'ty'),
                     'rtn_t': 'void'},
    'set_type_ufuncptr': {'arg_ts': ('MuCtx', 'MuTypeNode', 'MuFuncSigNode'),
                          'args': ('ctx', 'ufuncptr', 'sig'),
                          'rtn_t': 'void'},
    'set_type_uptr': {'arg_ts': ('MuCtx', 'MuTypeNode', 'MuTypeNode'),
                      'args': ('ctx', 'uptr', 'ty'),
                      'rtn_t': 'void'},
    'set_type_weakref': {'arg_ts': ('MuCtx', 'MuTypeNode', 'MuTypeNode'),
                         'args': ('ctx', 'weakref', 'ty'),
                         'rtn_t': 'void'}}


class MuBuilderAPINotImplementedError(Exception):
    pass

# from rpython.rlib.objectmodel import specialize
# @specialize.ll()
def __notimp_method(self, *args):
    raise MuBuilderAPINotImplementedError

for fn in API:
    setattr(AbstractMuIRBuilder, fn, __notimp_method)


# # ------------------------------------------------------------
# # Testing
# class TestBuilder(AbstractMuIRBuilder):
#     def new_type_int(self, b, len):
#         print "called concrete new_type_int with args: %s" % str((b, len))
#
# def main(argv):
#     bldr = TestBuilder()
#     try:
#         bldr.new_type_int(int(argv[1]), argv[2])
#     except MuBuilderAPINotImplementedError:
#         print "Failed to call concrete new_type_int"
#         return 1
#
#     try:
#         bldr.new_type_struct([])
#     except MuBuilderAPINotImplementedError:
#         print "Successfully captured MuBuilderAPINotImplementedError"
#     return 0
#
# def target(*args):
#     return main, None
